@model MathСalculator.WebUI.Models.GausModel
@{
    ViewBag.Title = "Метод Гаусса";
    Layout = "~/Views/Shared/_LayoutMobile.cshtml";

}


<p style="text-align: center;"><strong><span style="font-size:26px;"><font color="#252525" face="sans-serif"><span style="line-height: 22.3999996185303px; background-color: rgb(255, 255, 255);">Метод Гаусса</span></font></span></strong></p>

<hr />
<h1><span style="color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.3999996185303px; background-color: rgb(255, 255, 255);">это&nbsp;классический метод решения&nbsp;</span><a href="https://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%B0_%D0%BB%D0%B8%D0%BD%D0%B5%D0%B9%D0%BD%D1%8B%D1%85_%D0%B0%D0%BB%D0%B3%D0%B5%D0%B1%D1%80%D0%B0%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D1%85_%D1%83%D1%80%D0%B0%D0%B2%D0%BD%D0%B5%D0%BD%D0%B8%D0%B9" style="text-decoration: none; color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.3999996185303px; background: none rgb(255, 255, 255);" title="Система линейных алгебраических уравнений">системы линейных алгебраических уравнений</a><span style="color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.3999996185303px; background-color: rgb(255, 255, 255);">&nbsp;(СЛАУ). Это метод последовательного исключения&nbsp;</span><a href="https://ru.wikipedia.org/wiki/%D0%9F%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F_%D0%B2%D0%B5%D0%BB%D0%B8%D1%87%D0%B8%D0%BD%D0%B0" style="text-decoration: none; color: rgb(11, 0, 128); font-family: sans-serif; font-size: 14px; line-height: 22.3999996185303px; background: none rgb(255, 255, 255);" title="Переменная величина">переменных</a><span style="color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.3999996185303px; background-color: rgb(255, 255, 255);">, когда с помощью элементарных преобразований система уравнений приводится к равносильной системе треугольного вида, из которой последовательно, начиная с последних (по номеру), находятся все переменные системы</span><span style="color: rgb(37, 37, 37); font-family: sans-serif; font-size: 14px; line-height: 22.3999996185303px; background-color: rgb(255, 255, 255);">.</span></h1>
@if (ViewBag.flag1 == true)
{
    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
        Начать решение
    </button>
}
<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Введите количество строк и количество переменных</h4>
            </div>
            @using (@Html.BeginForm("Gaus", "Methods", FormMethod.Post))
            {

                <div class="modal-body">

                    <div>
                        @Html.Label("Введите количество строк ")
                        <br />
                        @Html.EditorFor(x => x.countRows)
                    </div>
                    <div>
                        @Html.Label("Введите количество переменных")
                        <br />
                        @Html.EditorFor(x => x.countVariable)
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Решить</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Закрыть</button>
                </div>
            }

        </div>
    </div>
</div>

<form method="post" action="/Methods/Gaus">
    @if (ViewBag.flag == true)
    {
        <br />

        @Html.Hidden("countRows", Model.countRows)
    
        @Html.Hidden("countVariable", Model.countVariable)
   

        @Html.LabelFor(x => x.Matrix)
        <br />
        for (int k = 0; k < Model.countRows * Model.countVariable; k++)
        {

            @Html.TextBox("ints", "0", new { @id = "myInput1" })
            for (int j = 0; j < Model.countRows; j++)
            {
                if (j != 0 && k == j * Model.countVariable - 1)
                {
                    <br />
                }
            }
        }
    
        <br />
        @Html.LabelFor(x => x.myArray)
        <br />
        for (int k = 0; k < Model.countRows; k++)
        {
            @Html.TextBoxFor(x => x.myArray, new { @placeholder = "0", @id = "myInput1" })

            <br />
        }
        <br />
        <br />
    <button type="submit" class="btn btn-primary">Решить</button>

    }
</form>
@if (ViewBag.answer == true)
{
    <br />
    <br />
    <br />
    for (int i = 0; i < Model.answer.Length; i++)
    {
        @Html.Label("x[" + i + "] = ")
        @Html.TextBoxFor(x => x.answer[i]);
    <br />
    }
    {
        <br />
    }
}

<style>
    #myInput1 {
        width: 20px; /* Ширина поля в пикселах */
     
        /*margin-top: 100px;*/
    }

</style>

